// Define process selector for tasks resources
process {
    // Capture exit codes from upstream processes when piping
    shell = ['/usr/bin/env bash', '-euo', 'pipefail']

    // default for all tasks
    cpus = { check_max( 1 * task.attempt, 'cpus' ) }
    memory = { check_max( 20.GB * task.attempt, 'memory' ) }
    time = { check_max( 1.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
    maxRetries = 3
    maxErrors = '-1'

   // containers
    withLabel : test_data {
        cpus = { check_max( 1, 'cpus' ) }
        memory = { check_max( 5.GB * task.attempt, 'memory' ) }
    }
    withLabel : qiime2_env { 
        conda = "${baseDir}/containers/qiime2-2019.10/environment.yml" 
        container = "nfcore/samba-qiime2:2019.10"
        cpus = { check_max( 14, 'cpus' ) }
        memory = { check_max( 80.GB * task.attempt, 'memory' ) }
    }
    withLabel : microdecon_env { 
        conda = "${baseDir}/containers/microdecon-1.0.2/environment.yml"
        container = "nfcore/samba-microdecon:1.0.2"
    }
    withLabel : r_stats_env { 
        conda = "${baseDir}/containers/r-3.6.1/environment.yml" 
        container = "nfcore/samba-r:3.6.1"
    }
    withLabel : seqtk_env { 
        conda = "${baseDir}/containers/seqtk-1.2/environment.yml" 
        container = "nfcore/samba-seqtk:1.2"
    }
    withLabel : jinja2_env {
        conda = "${baseDir}/containers/jinja2-2.11.1/environment.yml"
    }
}

